'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var vest = require('vest');
var vestUtils = require('vest-utils');

// eslint-disable-next-line max-statements
function parse(summary) {
    vestUtils.invariant(summary && vestUtils.hasOwnProperty(summary, 'valid'), "Vest parser: expected argument at position 0 to be Vest's result object.");
    var sel = vest.suiteSelectors(summary);
    var testedStorage = {};
    var selectors = {
        invalid: sel.hasErrors,
        tested: isTested,
        untested: isUntested,
        valid: sel.isValid,
        warning: sel.hasWarnings
    };
    return selectors;
    // Booleans
    function isTested(fieldName) {
        if (!fieldName) {
            return vestUtils.isPositive(summary.testCount);
        }
        if (vestUtils.hasOwnProperty(testedStorage, fieldName))
            return testedStorage[fieldName];
        testedStorage[fieldName] =
            vestUtils.hasOwnProperty(summary.tests, fieldName) &&
                vestUtils.isPositive(summary.tests[fieldName].testCount);
        return selectors.tested(fieldName);
    }
    function isUntested(fieldName) {
        return !(vestUtils.isPositive(summary.testCount) && selectors.tested(fieldName));
    }
}

exports.parse = parse;
