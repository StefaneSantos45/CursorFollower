(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('vest-utils')) :
  typeof define === 'function' && define.amd ? define(['vest-utils'], factory) :
  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.promisify = factory(global["vest-utils"]));
})(this, (function (vestUtils) { 'use strict';

  var promisify = function (validatorFn) {
      return function () {
          var args = [];
          for (var _i = 0; _i < arguments.length; _i++) {
              args[_i] = arguments[_i];
          }
          vestUtils.invariant(vestUtils.isFunction(validatorFn), 'promisify: Expected validatorFn to be a function.');
          return new Promise(function (resolve) { return validatorFn.apply(void 0, args).done(resolve); });
      };
  };

  return promisify;

}));
