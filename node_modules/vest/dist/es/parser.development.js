import { suiteSelectors } from 'vest';
import { invariant, hasOwnProperty, isPositive } from 'vest-utils';

// eslint-disable-next-line max-statements
function parse(summary) {
    invariant(summary && hasOwnProperty(summary, 'valid'), "Vest parser: expected argument at position 0 to be Vest's result object.");
    var sel = suiteSelectors(summary);
    var testedStorage = {};
    var selectors = {
        invalid: sel.hasErrors,
        tested: isTested,
        untested: isUntested,
        valid: sel.isValid,
        warning: sel.hasWarnings
    };
    return selectors;
    // Booleans
    function isTested(fieldName) {
        if (!fieldName) {
            return isPositive(summary.testCount);
        }
        if (hasOwnProperty(testedStorage, fieldName))
            return testedStorage[fieldName];
        testedStorage[fieldName] =
            hasOwnProperty(summary.tests, fieldName) &&
                isPositive(summary.tests[fieldName].testCount);
        return selectors.tested(fieldName);
    }
    function isUntested(fieldName) {
        return !(isPositive(summary.testCount) && selectors.tested(fieldName));
    }
}

export { parse };
